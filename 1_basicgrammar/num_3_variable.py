"""
    变量:
        指在运行程序时, 为数据在内存中分配的空间
        变量名命名规则:
            a. 每个单词都使用小写字母
            b. 单词与单词之间使用_下划线链接
        变量定义:
            variable_name = data
            variable_name: 变量名
            data: 变量初始化值
        变量包括四部分内容:
            1. 变量名
            2. 变量存储的数据值
            3. 变量存储数据的类型
            4. 变量在内存中的地址值
        id() 和 type() 函数:
            id(): 可以获取变量在内存中的地址值(就是引用)
            type(): 可以获取变量的数据类型
        Python中的变量类型:
            数字类型:
                1. int ==> 整数
                2. float ==> 浮点数
                3. complex ==> 复数
                4. bool ==> 布尔型
            非数字类型:
                1. str ==> 字符串: 描述文本的一种数据类型, 由任意数量的字符组成, 由单引号或双引号包裹
                2. list ==> 列表: 有序的可变集合, python中使用最频繁的集合
                3. tuple ==> 元组: 有序的不可变集合
                4. dict ==> 字典: 无序 key-value集合
                5. set ==> 集合: 无序不重复集合
    全局变量和局部变量:
        局部变量:
            1. 在函数内部定义的变量, 只能在函数内部使用
            2. 函数执行结束后, 局部变量会被系统回收
            3. 不同函数可以定义同名局部变量, 互不影响
        全局变量:
            1. 全局变量在函数外部定义, 所有函数都可以使用
            2. 函数内部不可以直接修改全局变量, 要想在函数内部修改全局变量, 需要使用global关键字进行声明
            注意: 函数内调用全局变量, 对于不可变数据, 如果不使用global关键字进行声明, 相当于创建了同名
                  局部变量, 所做操作不会改变全局变量
        函数内变量调用原则:
            1. 先查找是否存在有同名局部变量, 如果有, 则直接使用
            2. 无局部变量, 查找是否有同名全局变量, 如果有, 直接使用
            3. 无局部变量也无全局变量, 程序报错
    常量:
        Python中并没有真正意义的常量,只是通过命名的约定--所有字母都是大写的就是常量
        常量定义:
            CONSTANT_NAME = data
            CONSTANT_NAME: 常量名, 要求全部大写, 见名知意, 多个单词使用下划线分割
        常量的优点:
            1.阅读代码时,通过常量名见名知义,不需要猜测数字的含义
            2.当需要调整数值时,只需要修改常量定义就可以实现统一修改
"""

# 定义两个变量
num = 10
height = 168.5

# 获取变量地址值并打印
print(id(num))
print(id(height))

# 获取变量类型并打印
print(type(num))
print(type(height))
